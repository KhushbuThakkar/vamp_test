{"version":3,"sources":["Reducers/campaignsReducer.js","Reducers/teamsReducer.js","Reducers/index.js","Actions/types.js","store.js","Components/Box/Box.js","Components/Header/Header.js","Components/SearchBox/SearchBox.js","Components/Container/Container.js","Components/Loader/Loader.js","Views/Campaigns/Campaigns.js","Actions/campaignsActions.js","Actions/teamActions.js","Utils/Interceptor.js","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","campaigns","errors","teams","combineReducers","state","action","type","payload","data","middleware","thunk","logger","store","createStore","rootReducer","compose","composeWithDevTools","applyMiddleware","Box","props","children","Header","p","mb","sx","mx","px","bg","color","text","defaultProps","SearchBox","useState","searchText","setsearchText","justifyContent","width","id","name","value","placeholder","onChange","event","target","onSearch","my","border","borderBottom","borderColor","borderRadius","Container","maxWidth","BounceAnimation","keyframes","DotWrapper","styled","div","Dot","delay","LoadingDots","Campaigns","setcampaigns","setteams","selectedTeam","setSelectedTeam","getCampaigns","getTeams","setloading","useEffect","SearchText","map","team","key","variant","mr","onClick","selected","Loader","flexWrap","length","campaign","py","fontSize","connect","dispatch","axios","get","then","res","catch","err","response","require","isAbsoluteURLRegex","interceptors","request","use","config","test","url","process","interceptor","App","theme","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.1d7be11c.chunk.js","sourcesContent":["import {\r\n  GET_CAMPAIGNS_SUCCESS,\r\n  GET_CAMPAIGNS_ERRORS,\r\n  GET_CAMPAIGNS_LOADING,\r\n} from \"../Actions/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  campaigns: [],\r\n  errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_CAMPAIGNS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        campaigns: action.payload,\r\n      };\r\n\r\n    case GET_CAMPAIGNS_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.data,\r\n      };\r\n\r\n    case GET_CAMPAIGNS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_TEAMS_SUCCESS,\r\n  GET_TEAMS_ERRORS,\r\n  GET_TEAMS_LOADING,\r\n} from \"../Actions/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  teams: [],\r\n  errors: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_TEAMS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        teams: action.payload,\r\n      };\r\n\r\n    case GET_TEAMS_ERRORS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errors: action.payload.data,\r\n      };\r\n\r\n    case GET_TEAMS_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport campaignsReducer from \"./campaignsReducer\";\r\nimport teamsReducer from \"./teamsReducer\";\r\n\r\nexport default combineReducers({\r\n  campaigns: campaignsReducer,\r\n  teams: teamsReducer\r\n});\r\n","export const GET_CAMPAIGNS_LOADING = \"GET_CAMPAIGNS_LOADING\";\r\nexport const GET_CAMPAIGNS_ERRORS = \"GET_CAMPAIGNS_ERRORS\";\r\nexport const GET_CAMPAIGNS_SUCCESS = \"GET_CAMPAIGNS_SUCCESS\";\r\n\r\nexport const GET_TEAMS_LOADING = \"GET_TEAMS_LOADING\";\r\nexport const GET_TEAMS_ERRORS = \"GET_TEAMS_ERRORS\";\r\nexport const GET_TEAMS_SUCCESS = \"GET_TEAMS_SUCCESS\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./Reducers\";\r\nimport { logger } from \"redux-logger\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nconst initialState = {};\r\nconst middleware = [thunk, logger];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(composeWithDevTools(applyMiddleware(...middleware)))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Box as RBox } from \"rebass\";\r\n\r\nconst Box = (props) => {\r\n  return <RBox {...props}>{props.children}</RBox>;\r\n};\r\n\r\nBox.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Box;\r\n","import React from \"react\";\r\nimport { Text } from \"rebass\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Box from \"../Box/Box\";\r\n\r\nconst Header = (props) => (\r\n  <Box\r\n    p={20}\r\n    mb={10}\r\n    sx={{\r\n      mx: \"auto\",\r\n      px: 3,\r\n      bg: \"primary\",\r\n    }}\r\n  >\r\n    <Text color=\"white\">{props.text}</Text>\r\n  </Box>\r\n);\r\n\r\nHeader.propTypes = {\r\n  text: PropTypes.string,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  text: \"\",\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Input } from \"@rebass/forms\";\r\nimport { Flex } from \"rebass\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport Box from \"../Box/Box\";\r\n\r\nconst SearchBox = (props) => {\r\n  const [searchText, setsearchText] = useState(\"\");\r\n  const onChange = (event) => {\r\n    setsearchText(event.target.value);\r\n    props.onSearch(searchText);\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"flex-end\">\r\n      <Box width={2 / 6}>\r\n        {/* <Label htmlFor=\"campaigns\">Search Campaigns</Label> */}\r\n        <Input\r\n          id=\"campaigns\"\r\n          name=\"campaigns\"\r\n          value={searchText}\r\n          type=\"campaigns\"\r\n          placeholder=\"Enter Team Name\"\r\n          onChange={onChange}\r\n          my={2}\r\n          sx={{\r\n            border: \"none\",\r\n            borderBottom: \"1px solid\",\r\n            borderColor: \"primary\",\r\n            borderRadius: \"0\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nSearchBox.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Box from \"../Box/Box\";\r\n\r\nconst Container = (props) => (\r\n  <Box\r\n    sx={{\r\n      maxWidth: \"60%\",\r\n      mx: \"auto\",\r\n      px: 3,\r\n    }}\r\n  >\r\n    {props.children}\r\n  </Box>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]).isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport styled from \"@emotion/styled\";\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { keyframes } from \"@emotion/core\";\r\nimport { Flex } from \"rebass\";\r\n\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 15px }\r\n  100% { margin-bottom: 0 }\r\n`;\r\n\r\nconst DotWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst Dot = styled.div`\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${(props) => props.delay};\r\n`;\r\n\r\nconst LoadingDots = () => {\r\n  return (\r\n    <Flex justifyContent=\"center\" p={50}>\r\n      <DotWrapper>\r\n        <Dot delay=\"0s\" />\r\n        <Dot delay=\".1s\" />\r\n        <Dot delay=\".2s\" />\r\n      </DotWrapper>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default LoadingDots;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Flex, Text, Button } from \"rebass\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nimport Box from \"../../Components/Box/Box\";\r\nimport { getCampaigns } from \"../../Actions/campaignsActions\";\r\nimport { getTeams } from \"../../Actions/teamActions\";\r\n\r\nimport Header from \"../../Components/Header/Header\";\r\nimport SearchBox from \"../../Components/SearchBox/SearchBox\";\r\nimport Container from \"../../Components/Container/Container\";\r\nimport Loader from \"../../Components/Loader/Loader\";\r\n\r\nconst Campaigns = (props) => {\r\n  const [campaigns, setcampaigns] = useState([]);\r\n  const [teams, setteams] = useState([]);\r\n  const [selectedTeam, setSelectedTeam] = useState(\"\");\r\n  const { getCampaigns, getTeams } = props;\r\n  // const InitialPropA = useRef(campaigns);\r\n\r\n  const [loading, setloading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getCampaigns();\r\n    getTeams();\r\n  }, [getCampaigns, getTeams]);\r\n\r\n  useEffect(() => {\r\n    setcampaigns(props.campaigns.campaigns);\r\n    setloading(props.campaigns.loading);\r\n  }, [props.campaigns]);\r\n\r\n  useEffect(() => {\r\n    setteams(props.teams.teams);\r\n    // setloading(props.campaigns.loading);\r\n  }, [props.teams]);\r\n\r\n  const filterByText = (SearchText) => {\r\n    setSelectedTeam(\"\");\r\n    props.getCampaigns(SearchText);\r\n  };\r\n\r\n  const filterByName = (name, selected) => {\r\n    props.getCampaigns(name);\r\n    setSelectedTeam(selected);\r\n  };\r\n\r\n  const renderTeams = () => {\r\n    return (\r\n      teams &&\r\n      teams.map((team, key) => {\r\n        return (\r\n          <Button\r\n            variant={selectedTeam === key ? \"primary\" : \"outline\"}\r\n            mr={2}\r\n            onClick={() => filterByName(team.name, key)}\r\n          >\r\n            {team.name}\r\n          </Button>\r\n        );\r\n      })\r\n    );\r\n  };\r\n  const renderCampaigns = () => {\r\n    if (campaigns.length === 0) {\r\n      return (\r\n        <Text p={1} color=\"secondary\">\r\n          No Records Found\r\n        </Text>\r\n      );\r\n    }\r\n    return campaigns.map((campaign) => {\r\n      return (\r\n        <Box px={2} py={2} width={1 / 2}>\r\n          <Box px={2} py={2} bg=\"muted\">\r\n            <Text p={1} color=\"secondary\" fontSize={3}>\r\n              {campaign.name}\r\n            </Text>\r\n            <Text p={1} color=\"primary\">\r\n              {campaign.team.name}\r\n            </Text>\r\n          </Box>\r\n        </Box>\r\n      );\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Header text=\"Campaigns\"></Header>\r\n      <Container>\r\n        <SearchBox onSearch={filterByText} />\r\n        <Flex>{renderTeams()}</Flex>\r\n        {loading ? (\r\n          <Loader />\r\n        ) : (\r\n          <>\r\n            <Flex flexWrap=\"wrap\" mx={-2}>\r\n              {renderCampaigns()}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nCampaigns.propTypes = {\r\n  getCampaigns: PropTypes.func.isRequired,\r\n  getTeams: PropTypes.func.isRequired,\r\n  teams: PropTypes.shape({\r\n    teams: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    errors: PropTypes.objectOf(PropTypes.any),\r\n  }),\r\n  campaigns: PropTypes.shape({\r\n    campaigns: PropTypes.array,\r\n    loading: PropTypes.bool,\r\n    errors: PropTypes.objectOf(PropTypes.any),\r\n  }),\r\n};\r\n\r\nCampaigns.defaultProps = {\r\n  teams: {},\r\n  campaigns: {},\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    campaigns: state.campaigns || {},\r\n    teams: state.teams || {},\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { getCampaigns, getTeams })(Campaigns);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_CAMPAIGNS_SUCCESS,\r\n  GET_CAMPAIGNS_ERRORS,\r\n  GET_CAMPAIGNS_LOADING\r\n} from \"../Actions/types\";\r\n\r\nexport const setCampaignsLoading = () => {\r\n  return {\r\n    type: GET_CAMPAIGNS_LOADING\r\n  };\r\n};\r\n\r\nexport const getCampaigns = searchText => dispatch => {\r\n  dispatch(setCampaignsLoading());\r\n\r\n  axios\r\n    .get(`/api/campaigns/${searchText ? searchText : \"\"}`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_CAMPAIGNS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_CAMPAIGNS_ERRORS,\r\n        payload: err && err.response ? err.response.data : \"\"\r\n      })\r\n    );\r\n};\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_TEAMS_SUCCESS,\r\n  GET_TEAMS_ERRORS,\r\n  GET_TEAMS_LOADING\r\n} from \"../Actions/types\";\r\n\r\nexport const setTeamsLoading = () => {\r\n  return {\r\n    type: GET_TEAMS_LOADING\r\n  };\r\n};\r\n\r\nexport const getTeams = () => dispatch => {\r\n  dispatch(setTeamsLoading());\r\n\r\n  axios\r\n    .get(`/api/teams`)\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_TEAMS_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_TEAMS_ERRORS,\r\n        payload: err && err.response ? err.response.data : \"\"\r\n      })\r\n    );\r\n};\r\n","const axios = require(\"axios\");\r\n\r\n// https://github.com/sindresorhus/is-absolute-url/blob/master/index.js#L7\r\nconst isAbsoluteURLRegex = /^(?:\\w+:)\\/\\//;\r\n\r\nconst interceptor = () => {\r\n  // eslint-disable-next-line func-names\r\n  axios.interceptors.request.use(function(config) {\r\n    // Concatenate base path if not an absolute URL\r\n    if (!isAbsoluteURLRegex.test(config.url)) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      config.url = `${process.env.REACT_APP_api_url}${config.url}`;\r\n    }\r\n    return config;\r\n  });\r\n};\r\n\r\nexport default interceptor;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { ThemeProvider } from \"emotion-theming\";\nimport theme from \"@rebass/preset\";\nimport store from \"./store\";\nimport Campaigns from \"./Views/Campaigns/Campaigns\";\nimport interceptor from \"./Utils/Interceptor\";\n\ninterceptor();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <Campaigns />\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}